var tipuesearch = {"pages": [{'title': 'About', 'text': '本學期的電腦輔助設計實習, 要求每一位學員根據本 HW template 的格式建立個人的作業倉儲與網頁. \n \n 40923225 \n 網站倉儲: \xa0https://github.com/40923225/cad2021_hw \n 網站連結:  https://40923225.github.io/cad2021_hw/content/index.html \n 其他與作者或作業相關資料說明或介紹 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Task', 'text': '', 'tags': '', 'url': 'Task.html'}, {'title': 'hwpages(run)', 'text': 'from browser import html from browser import document import random brython_div = document["brython_div"] url = "https://gist.githubusercontent.com/mdecourse/b11a88a98655d41055c47f08fe94788f/raw/8a27e6885ee1a5074bcf864d741679afeac796c4/2b_w2_stud_list.txt" data = open(url).readlines() # 檢查資料筆數, 第一筆為 title #print(data) #print(len(data)) data = data[1:] #print(data) # 根據 href 與 content 將 html 元件中的 anchor 插入頁面 def makeLink(href, content):  brython_div <= html.A(content, href=href)  #brython_div <= html.BR() # 從學員資料中隨機取出 10 位學員的網頁進行查核 select = 10 #random.shuffle(data) #data = data[:select] course = "cad2021" for i in range(len(data)):  num_github = data[i]   num = num_github.split("\\t")[0]  account = num_github.split("\\t")[1]  if account == "":  account = num  content = str(num)  hwhref = "https://"+ str(account) + ".github.io/"+course+ "_hw"  repohref = "https://github.com/"+ str(account) +"/"+course +"_hw"  brython_div <= "repo: "  makeLink(repohref, content)  brython_div <= " www: "  makeLink(hwhref, content)  brython_div <= html.BR() \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n repo: \xa0 40723126 \xa0\xa0 www: 40723126 repo: \xa0 40723135 \xa0\xa0 www: 40723135 repo: \xa0 40723217 \xa0 \xa0 www: 40723217 repo: \xa0 40732331 \xa0\xa0 www: 40732331 repo: \xa0 40823114 \xa0\xa0 www: 40823114 repo: \xa0 40823115 \xa0 \xa0 www: 40823115 repo: \xa0 4 0823117 \xa0 \xa0 www: pyc40823117 repo: \xa0 40823119 \xa0 \xa0 www: 40823119 repo: \xa0 40823122\xa0 \xa0www: 40823122 repo: \xa0 40823127 \xa0 \xa0 www: 40823127 repo: \xa0 40823146 \xa0\xa0 www: 40823146 repo: \xa0 40823148 \xa0\xa0 www: 40823148 repo: \xa0 40823215 \xa0 \xa0 www: 40823215 repo: \xa0 40871106 \xa0  www: 40871106 repo: \xa0 40923201 \xa0\xa0 www: 40923201 repo: \xa0 40923203 \xa0\xa0 www: youshin40923203 repo: \xa0 40923204 \xa0\xa0 www: 40923204 repo: \xa0 40923205 \xa0\xa0 www: 40923205 repo: \xa0 40923206 \xa0\xa0 www: 40923206-1 repo: \xa0 40923207 \xa0\xa0 www: 40923207 repo: \xa0 40923208 \xa0\xa0 www: nfu40923208 repo: \xa0 40923209 \xa0\xa0 www: nfu40923209 repo: \xa0 40923210 \xa0\xa0 www: 40923210 repo: \xa0 40923211 \xa0\xa0 www: a40923211 \n repo: \xa0 40923212 \xa0\xa0 www: 40923212 repo: \xa0 40923213 \xa0\xa0 www: 40923213 repo: \xa0 40923214 \xa0\xa0 www: 40923214 repo: \xa0 40923216 \xa0\xa0 www: 40923216 repo: \xa0 40923217 \xa0\xa0 www: 40923217 repo: \xa0 40923218 \xa0\xa0 www: 40923218 \n repo: \xa0 40923219 \xa0\xa0 www: nfu40923219 repo: \xa0 40923220 \xa0\xa0 www: 40923220 repo: \xa0 40923221 \xa0\xa0 www: 40923221 repo: \xa0 40923223 \xa0\xa0 www: 40923223 repo: \xa0 40923224 \xa0\xa0 www: s40923224 repo: \xa0 40923225 \xa0\xa0 www: 40923225 repo: \xa0 40923226 \xa0\xa0 www: 40923226 repo: \xa0 40923227 \xa0\xa0 www: 40923227 repo: \xa0 40923228 \xa0\xa0 www: 40923228 repo: \xa0 40923229 \xa0\xa0 www: 40923229 repo: \xa0 40923230 \xa0\xa0 www: 40923230 repo: \xa0 40923231 \xa0\xa0 www: 40923231 repo: \xa0 40923232 \xa0\xa0 www: 40923232 repo: \xa0 40923233 \xa0\xa0 www: 40923233 repo: \xa0 40923234 \xa0\xa0 www: 40923234 repo: \xa0 40923235 \xa0\xa0 www: 40923235 repo: \xa0 40923236 \xa0\xa0 www: 40923236 repo: \xa0 40923237 \xa0 \xa0 www: 40923237 repo: \xa0 40923238 \xa0 \xa0 www: 40923238 repo: \xa0 40923239 \xa0 \xa0 www: 40923239 repo: \xa0 40923240 \xa0\xa0 www: 40923240 repo: \xa0 40923241 \xa0\xa0 www: 40923241 repo: \xa0 40923242 \xa0\xa0 www: 40923242 repo: \xa0 40923243 \xa0\xa0 www: 40923243 repo: \xa0 40923244 \xa0\xa0 www: 40923244 repo: \xa0 40923245 \xa0\xa0 www: 40923245-1 repo: \xa0 40923246 \xa0\xa0 www: 40923246 repo: \xa0 40923247 \xa0\xa0 www: 40923247 repo: \xa0 40923248 \xa0\xa0 www: 40923248 repo: \xa0 40923249 \xa0\xa0 www: 40923249-1 repo: \xa0 40923250 \xa0\xa0 www: 40923250 repo: \xa0 40923251 \xa0\xa0 www: 40923251 repo: \xa0 40923252 \xa0\xa0 www: 40923252 repo: \xa0 40923253 \xa0\xa0 www: 40923253 repo: \xa0 40971220 \xa0\xa0 www: 40971220 repo: \xa0 40971227 \xa0\xa0 www: 40971227 \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n', 'tags': '', 'url': 'hwpages(run).html'}, {'title': 'hwpages(ctrl+c)', 'text': '倉儲:\xa0 \xa0 \xa0 \xa0 \xa0 網站: 40723126 \xa0\xa0 40723126 40723135 \xa0\xa0 40723135 40723217  \xa0 40723217 40732331 \xa0\xa0 40732331 40823114 \xa0\xa0 40823114 40823115  \xa0 40823115 40823117  \xa0 pyc40823117 40823119  \xa0 40823119 40823122\xa0   40823122 40823127  \xa0 40823127 40823146 \xa0\xa0 40823146 40823148 \xa0\xa0 40823148 40823215  \xa0 40823215 40871106 \xa0\xa0 40871106 40923201 \xa0\xa0 40923201 40923203 \xa0\xa0 youshin40923203 40923204 \xa0\xa0 40923204 40923205 \xa0\xa0 40923205 40923206 \xa0\xa0 40923206-1 40923207 \xa0\xa0 40923207 40923208 \xa0\xa0 nfu40923208 40923209 \xa0\xa0 nfu40923209 40923210 \xa0\xa0 40923210 40923211 \xa0\xa0 a40923211 \n 40923212 \xa0\xa0 40923212 40923213 \xa0\xa0 40923213 40923214 \xa0\xa0 40923214 40923216 \xa0\xa0 40923216 40923217 \xa0\xa0 40923217 40923218 \xa0\xa0 40923218 \n 40923219 \xa0\xa0 nfu40923219 40923220 \xa0\xa0 40923220 40923221 \xa0\xa0 40923221 40923223 \xa0\xa0 40923223 40923224 \xa0\xa0 s40923224 40923225 \xa0\xa0 40923225 40923226 \xa0\xa0 40923226 40923227 \xa0\xa0 40923227 40923228 \xa0\xa0 40923228 40923229 \xa0\xa0 40923229 40923230 \xa0\xa0 40923230 40923231 \xa0\xa0 40923231 40923232 \xa0\xa0 40923232 40923233 \xa0\xa0 40923233 40923234 \xa0\xa0 40923234 40923235 \xa0\xa0 40923235 40923236 \xa0\xa0 40923236 40923237  \xa0 40923237 40923238  \xa0 40923238 40923239  \xa0 40923239 40923240 \xa0\xa0 40923240 40923241 \xa0\xa0 40923241 40923242 \xa0\xa0 40923242 40923243 \xa0\xa0 40923243 40923244 \xa0\xa0 40923244 40923245 \xa0\xa0 40923245-1 40923246 \xa0\xa0 40923246 40923247 \xa0\xa0 40923247 40923248 \xa0\xa0 40923248 40923249 \xa0\xa0 40923249-1 40923250 \xa0\xa0 40923250 40923251 \xa0\xa0 40923251 40923252 \xa0\xa0 40923252 40923253 \xa0\xa0 40923253 40971220 \xa0\xa0 40971220 40971227 \xa0\xa0 40971227 \n \n', 'tags': '', 'url': 'hwpages(ctrl+c).html'}, {'title': 'HW1', 'text': 'HW1 佔學期成績 25% \n HW1 必須在 2021.11.10 22:00 之前完成. \n HW1 具體項目成果回報區 將於 2021.09.23 開啟, 於  2021.11.10 22:00 關閉. \n 作業一: meArm Robot 零件繪圖與機電運動模擬場景製作 \n Step1 : 下載  meARM.7z  這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊. \n meArm_75-0040_v1.pdf  則是另外一本組立參考手冊. \n Step2 : 從課程網頁中的  Compile CoppeliaSim 頁面 , 下載  coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z  (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件. \n Step3 : 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,\xa0 經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件 匯入  CoppeliaSim 進行組裝配置後, 以  UI 介面 中的 slider 控制 meArm Robot 各軸的旋轉作動. \n 2b CAD 套件分配結果:  https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt \n 附件: \n 1. CAD 套件分配表: \n sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace \n 2a 套件亂數分配結果 \n 2b 套件亂數分配結果 \n 2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用  shape edit modes  轉為  clean model , 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes). \n 3. meARM Robot  動態模擬場景 的建構, 可參考  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 , 也可參考  Uarm Robot model  與相關 影片 . \n 4. CoppeliaSim design dynamic simulations  說明頁面 . \n 5.  網際 Lua  程式執行. \n 6.  meArm.slvs ,  meArm_in_solvespace.slvs \n 7. UI 介面程式參考: \n function closeEventHandler(h)\n    sim.addLog(sim.verbosity_scriptinfos,\'Window \'..h..\' is closing...\')\n    simUI.hide(h)\nend\n\nfunction joint1_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta1 set to \'..newVal)\n    sim.setJointTargetPosition(joint1, newVal*deg)\nend\n\nfunction joint2_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta2 set to \'..newVal)\n    sim.setJointTargetPosition(joint2, newVal*deg)\nend\n\nfunction joint3_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta3 set to \'..newVal)\n    sim.setJointTargetPosition(joint3, newVal*deg)\nend\n\nfunction joint16_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta16 set to \'..newVal)\n    sim.setJointTargetPosition(joint16, newVal*deg)\n    sim.setJointTargetPosition(joint20, -newVal*deg)\nend\n\nfunction sysCall_init()\n    -- do some initialization here\n    joint1 = sim.getObjectHandle(\'motor1\')\n    joint2 = sim.getObjectHandle(\'motor2\')\n    joint3 = sim.getObjectHandle(\'motor3\')\n    joint16 = sim.getObjectHandle(\'motor16\')\n    joint20 = sim.getObjectHandle(\'motor20\')\n    i = 0\n    deg = math.pi/180\n    print(i)\n    xml = [[\n<ui closeable="true" on-close="closeEventHandler" resizable="true">\n    <label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" />\n    <tabs>\n        <tab title="Numeric">a\n            <label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" />\n            <label text="" id="3000" wordwrap="true" />\n            <label text="theta1" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="360" on-change="joint1_rotate" />\n            <label text="theta2" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="65" on-change="joint2_rotate" />\n            <label text="theta3" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="185" on-change="joint3_rotate" />\n            <label text="theta16" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="15" on-change="joint16_rotate" />\n        </tab>\n    </tabs>\n</ui>\n]]\n    ui=simUI.create(xml)\n    \nend \n \n (From:  2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf ) \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'CAD1 繪圖(Onshape)', 'text': '\n CAD1 指各學員所分配到的第一套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace. \n CAD1 緣起說明與介紹(Onshape) \n (origin) Jon Hirschtick  founded  Solidworks  in 1993. He left the  Solidworks  team in 2011 and founded  Onshape  in 2012. The ideas that were not used in  Solidworks  will be put on  Onshape . \n \n (Feature introduction) \n \n 1.Collaboration function \n Share designs across devices. Edit with collaboration \n 2.Convenience and time saving \n The parts modified by the designer will be uploaded to the cloud in real time. Customers can view the modified parts on the cloud from a distance. The whole process is faster than previous programs \n 中: \n (緣起) Jon Hirschtick 於1993年創辦了 Solidworks .在2011年離開 Solidworks 團隊,並於2012年創立了 Onshape 公司.將沒在 Solidworks 上發揮的創意.投注到了 Onshape 上 \n (特色介紹) \n 1.協作功能 \n 跨設備分享設計.與可協作編輯 \n 2.便利與省時 \n 設計者所修改後的零件.會即時上傳雲端.客戶可以在遠方上雲端查看修改的部分.整個過程比以往的程式更快速 \n \n', 'tags': '', 'url': 'CAD1 繪圖(Onshape).html'}, {'title': 'CAD1 安裝配置(Onshape)', 'text': 'OnShape使用註冊 \n 1.首先到Onshape的首頁，然後選擇學生註冊帳號 \n \n 2.進行註冊 \n \n 3.註冊學校的相關資料.之後就到信箱點開激活碼 \n \n 4.設定基礎單位 \n \n 5.首頁 \n \n 6.繪圖畫面 \n', 'tags': '', 'url': 'CAD1 安裝配置(Onshape).html'}, {'title': 'CAD1 操作流程(Onshape)', 'text': 'Onshape 零組件繪圖教學 \n', 'tags': '', 'url': 'CAD1 操作流程(Onshape).html'}, {'title': 'CAD2 繪圖(solvespace)', 'text': '', 'tags': '', 'url': 'CAD2 繪圖(solvespace).html'}, {'title': 'CAD2 安裝配置(solvespace)', 'text': 'solvespace下載 \n', 'tags': '', 'url': 'CAD2 安裝配置(solvespace).html'}, {'title': 'CAD2 操作流程(solvespace)', 'text': 'solvespace繪圖教學 \n', 'tags': '', 'url': 'CAD2 操作流程(solvespace).html'}, {'title': '運動場景', 'text': 'CAD1( OnShape) : \n CAD1 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube) \n CAD1 零件轉入 CoppeliaSim 教學影片 (Wink) \n CAD1 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零件轉入 CoppeliaSim 教學影片」且加上 語音說明 與 字幕. \n \n CAD2( solvespace) : \n CAD2 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube) \n CAD2 零件轉入 CoppeliaSim 教學影片 (Wink) \n CAD2 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零件轉入 CoppeliaSim 教學影片」且加上 語音說明 與 字幕. \n 若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱. \n', 'tags': '', 'url': '運動場景.html'}, {'title': 'HW1-1', 'text': 'HW1-1 佔學期成績 15% \n HW1-1 必須在 2021.12.01 22:00 之前完成. \n HW1-1 具體項目成果回報區 將於 2021.11.18 開啟, 於  2021.12.01 22:00 關閉. \n 作業 1-1: Mirobot 機械手臂場景組合 \n 說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至  Task1-1  中六個自由度的 Mirobot 機械手臂. \n mirobot_part1_to_part5.7z  為取自 \xa0 https://github.com/wlkata/Mirobot-STL  的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過  UI 介面 中的 slider 控制各軸作動旋轉的運動模型. \n 請根據  Task1-1  中的說明, 完成各項指定任務. \n', 'tags': '', 'url': 'HW1-1.html'}, {'title': 'HW2', 'text': 'HW2 佔學期成績 20% \n HW2 必須在 2021.12.22 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.12.09 開啟, 於  2021.12.22 22:00 關閉. \n meArm 逆向運動學與網際參數式 CAD API 結合應用. \n 請將  https://github.com/mdecourse/meArm  中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制. \n 請利用  Task2  中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求. \n 參考: \n 2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf \n Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf \n KINEMATIC ANALYSIS FOR ROBOT ARM.pdf \n https://codebender.cc/user/MeArm \n https://github.com/mdecourse/meArmPi \n /downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf \n https://github.com/mdecourse/me-arm-ik \n https://github.com/mdecourse/mearm_model \n https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html \n https://github.com/mdecourse/InefficientSkittleSorter \n https://mearm.com \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 為選項作業. \n HW3 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n https://mde.tw/cad2021/content/Task3.html \xa0 \n https://mde.tw/cad2021/content/Task4.html \n https://mde.tw/cad2021/content/Task5.html \n https://mde.tw/cad2021/content/Task6.html \n https://mde.tw/cad2021/content/Task7.html \n 請從上列 Tasks 中自行選擇項目內容完成 HW3. \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Final Project', 'text': 'Final Project 佔學期成績 40% \n 2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project \n Final Project 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n 彈性製造系統場景設計與製作 \n 請從  https://github.com/mdecourse/scenes  與  https://github.com/mdecourse/models  中選擇場景或模型, 配合  cad2021_textbook.pdf  (登入 @gm 帳號後下載) 教材中的內容, 自選製作與組立產品, 組合成一個 Flexible Manufacturing System 系統場景. \n 彈性製造系統內容說明 \n 範例: \n \n \n', 'tags': '', 'url': 'Final Project.html'}, {'title': 'run', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n .tw/cp2021/cmsimde/static/Cango-24v03-min.js"> \n \n \n \n', 'tags': '', 'url': 'run.html'}]};